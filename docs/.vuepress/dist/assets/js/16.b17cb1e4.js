(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{550:function(e,s,a){"use strict";a.r(s);var r=a(12),t=Object(r.a)({},(function(){var e=this,s=e.$createElement,a=e._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h3",{attrs:{id:"安装-lib-flexible"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装-lib-flexible"}},[e._v("#")]),e._v(" 安装 lib-flexible")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("  npm i lib-flexible -S\n")])])]),a("h3",{attrs:{id:"在-main-js-中引入"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#在-main-js-中引入"}},[e._v("#")]),e._v(" 在 main.js 中引入")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("  import 'lib-flexible/flexible';\n")])])]),a("h3",{attrs:{id:"安装-px2rem-loader、postcss-loader"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装-px2rem-loader、postcss-loader"}},[e._v("#")]),e._v(" 安装 px2rem-loader、postcss-loader")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("  npm i px2rem-loader postcss-loader --save-dev\n")])])]),a("h3",{attrs:{id:"配置-px2rem"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置-px2rem"}},[e._v("#")]),e._v(" 配置 px2rem")]),e._v(" "),a("p",[e._v("如果使用的是 cli2.x,需要找到 build/utils.js,找到 exports.cssLoaders，修改为")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("exports.cssLoaders = function(options) {\n    options = options || {}\n    var cssLoader = {\n        loader: 'css-loader',\n        options: {\n            minimize: process.env.NODE_ENV === 'production',\n            sourceMap: options.sourceMap\n        }\n    }\n// 新增px2remLoader和postcssLoader定义\n    var px2remLoader = {\n        loader: 'px2rem-loader',\n        options: {\n          remUnit: 192,\n          remPrecision: 8  //1rem=多少像素 这里的设计稿是1920px。\n        }\n    }\n    var postcssLoader = {\n        loader: 'postcss-loader',\n        options: {\n          sourceMap: options.sourceMap\n        }\n      }\n    function generateLoaders(loader, loaderOptions) {\n        // var loaders = [cssLoader] //注释或删除此行变更成下面的方式\n        var loaders = options.usePostCSS ? [cssLoader,postcssLoader, px2remLoader] : [cssLoader,px2remLoader]\n        if(loader) {\n            loaders.push({\n                loader: loader + '-loader',\n                options: Object.assign({}, loaderOptions, {\n                    sourceMap: options.sourceMap\n                })\n            })\n        }\n\n        if(options.extract) {\n            return ExtractTextPlugin.extract({\n                use: loaders,\n                fallback: 'vue-style-loader'\n            })\n        } else {\n            return ['vue-style-loader'].concat(loaders)\n        }\n    }\n\n    return {\n        css: generateLoaders(),\n        postcss: generateLoaders(),\n        less: generateLoaders('less'),\n        sass: generateLoaders('sass', {\n            indentedSyntax: true\n        }),\n        scss: generateLoaders('sass'),\n        stylus: generateLoaders('stylus'),\n        styl: generateLoaders('stylus')\n    }\n}\n")])])]),a("p",[e._v("如果使用的是 vue3.x 的版本，则需要新建文件 vue.config.js，并在此文件配置以下代码")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("module.exports = {\n    css: {\n        loaderOptions: {\n            css: {},\n            postcss: {\n                plugins: [\n                    require('postcss-px2rem')({\n                        // 以设计稿1920为例， 1920 / 10 = 192\n                        remUnit: 192\n                    }),\n                ]\n            }\n        }\n    },\n};\n")])])]),a("h3",{attrs:{id:"当然-除了上面的配置外-在插件源码中-refreshrem-方法提到当宽度大于-540-这个特定值时就不再有对应的适配-这里为了使其适配超大屏幕-可以将其删除或注释。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#当然-除了上面的配置外-在插件源码中-refreshrem-方法提到当宽度大于-540-这个特定值时就不再有对应的适配-这里为了使其适配超大屏幕-可以将其删除或注释。"}},[e._v("#")]),e._v(" 当然，除了上面的配置外，在插件源码中 refreshRem 方法提到当宽度大于 540 这个特定值时就不再有对应的适配，这里为了使其适配超大屏幕，可以将其删除或注释。")]),e._v(" "),a("p",[e._v("打开./node_modules/lib-flexible/flexible.js，找到如下片段源码：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("  function refreshRem(){\n    var width = docEl.getBoundingClientRect().width;\n    //if (width / dpr > 540) {\n    //  width = 540 * dpr;\n    //}\n    var rem = width / 10;\n    docEl.style.fontSize = rem + 'px';\n    flexible.rem = win.rem = rem;\n}\n")])])]),a("h3",{attrs:{id:"不过一般是不建议直接更改-node-modules-的代码-这时可以将-flexible-js-复制出来放置到-static-文件夹中-在该文件做以上的代码变更-然后在-main-js-里面将之前的引用更改为当前文件的引用即可。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#不过一般是不建议直接更改-node-modules-的代码-这时可以将-flexible-js-复制出来放置到-static-文件夹中-在该文件做以上的代码变更-然后在-main-js-里面将之前的引用更改为当前文件的引用即可。"}},[e._v("#")]),e._v(" 不过一般是不建议直接更改 node_modules 的代码，这时可以将 flexible.js 复制出来放置到 static 文件夹中，在该文件做以上的代码变更，然后在 main.js 里面将之前的引用更改为当前文件的引用即可。")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("  import '../static/flexible.js';\n")])])])])}),[],!1,null,null,null);s.default=t.exports}}]);