(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{552:function(n,e,t){"use strict";t.r(e);var s=t(12),o=Object(s.a)({},(function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("h3",{attrs:{id:"项目中需要对器械进行控制-固使用-mqtt-进行开发"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#项目中需要对器械进行控制-固使用-mqtt-进行开发"}},[n._v("#")]),n._v(" 项目中需要对器械进行控制，固使用 mqtt 进行开发")]),n._v(" "),t("h4",{attrs:{id:"首先在入口-index-html-中引入"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#首先在入口-index-html-中引入"}},[n._v("#")]),n._v(" 首先在入口 index.html 中引入")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v('  <script src="https://cdnjs.cloudflare.com/ajax/libs/paho-mqtt/1.0.1/mqttws31.min.js" type="text/javascript"><\/script>\n')])])]),t("h4",{attrs:{id:"然后再创建工具类-mqtt-js"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#然后再创建工具类-mqtt-js"}},[n._v("#")]),n._v(" 然后再创建工具类 mqtt.js")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v('    var hostname = \'121.5.238.208\', // 约定好的地址\n        port = 8083, // 约定好的端口，默认8083，需要后端配合打开8083端口\n        clientId = \'\', // 约定的id\n        timeout = 5000,\n        keepAlive = 100,\n        cleanSession = false,\n        ssl = false,\n        // userName = \'mao2080\',\n        // password = \'123\',\n        topic = \'/plc/plc_data\'; // 约定的topic\n    var client = new Paho.MQTT.Client(hostname, port, clientId);\n    //建立客户端实例\n    var options = {\n        invocationContext: {\n            host: hostname,\n            port: port,\n            path: client.path,\n            clientId: clientId\n        },\n        timeout: timeout,\n        keepAliveInterval: keepAlive,\n        cleanSession: cleanSession,\n        useSSL: ssl,\n        // userName: userName,\n        // password: password,\n        onSuccess: onConnect,\n        onFailure: function (e) {\n            console.log(e);\n            let s = "{time:" + new Date().Format("yyyy-MM-dd hh:mm:ss") + ", onFailure()}";\n            console.log(s);\n        }\n    };\n    client.connect(options);\n    //连接服务器并注册连接成功处理事件\n    function onConnect() {\n        console.log("onConnected");\n        let s = "{time:" + new Date().Format("yyyy-MM-dd hh:mm:ss") + ", onConnected()}";\n        client.subscribe(topic, {qos: 0});\n    }\n\n    client.onConnectionLost = onConnectionLost;\n\n    //注册连接断开处理事件\n    client.onMessageArrived = onMessageArrived;\n\n    //注册消息接收处理事件\n    function onConnectionLost(responseObject) {\n        console.log(responseObject);\n        let s = "{time:" + new Date().Format("yyyy-MM-dd hh:mm:ss") + ", onConnectionLost()}";\n        console.log(s);\n        if (responseObject.errorCode !== 0) {\n            console.log("onConnectionLost:" + responseObject.errorMessage);\n            console.log("连接已断开");\n        }\n    }\n\n    function onMessageArrived(message) {\n        let s = "{time:" + new Date().Format("yyyy-MM-dd hh:mm:ss") + ", onMessageArrived()}";\n        console.log(message);\n        if (!!message.destinationName&&message.destinationName==\'/plc/plc_data\'){\n            localStorage.setItem(\'mqtt\', message.payloadString)\n        }\n        // console.log("收到消息:" + message.payloadString);\n    }\n\n    function send(s) {\n        // var s = document.getElementById("msg").value;\n        // 此处s需要与后端约定格式，按照指定格式编写json数据\n        if (s) {\n            // s = "{time:" + new Date().Format("yyyy-MM-dd hh:mm:ss") + ", content:" + (s) + ", from: web console}";\n            console.log(s)\n            let message = new Paho.MQTT.Message(JSON.stringify(s));\n            message.destinationName = \'/plc/write\';\n            console.log(message)\n            client.send(message);\n            // document.getElementById("msg").value = "";\n        }\n    }\n\n    var count = 0;\n\n    function start() {\n        window.tester = window.setInterval(function () {\n            if (client.isConnected) {\n                var s = "{time:" + new Date().Format("yyyy-MM-dd hh:mm:ss") + ", content:" + (count++) +\n                    ", from: web console}";\n                message = new Paho.MQTT.Message(s);\n                message.destinationName = topic;\n                client.send(message);\n            }\n        }, 1000);\n    }\n\n    function stop() {\n        window.clearInterval(window.tester);\n    }\n\n    Date.prototype.Format = function (fmt) { //author: meizz\n        var o = {\n            "M+": this.getMonth() + 1, //月份\n            "d+": this.getDate(), //日\n            "h+": this.getHours(), //小时\n            "m+": this.getMinutes(), //分\n            "s+": this.getSeconds(), //秒\n            "q+": Math.floor((this.getMonth() + 3) / 3), //季度\n            "S": this.getMilliseconds() //毫秒\n        };\n        if (/(y+)/.test(fmt)) fmt = fmt.replace(RegExp.$1, (this.getFullYear() + "").substr(4 - RegExp.$1.length));\n        for (var k in o)\n            if (new RegExp("(" + k + ")").test(fmt)) fmt = fmt.replace(RegExp.$1, (RegExp.$1.length == 1) ? (o[\n                k]) : (("00" + o[k]).substr(("" + o[k]).length)));\n        return fmt;\n    }\n\n    export default {\n        onConnect,\n        onMessageArrived,\n        send\n    }\n')])])]),t("h3",{attrs:{id:"最后在需要的页面引入使用即可"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#最后在需要的页面引入使用即可"}},[n._v("#")]),n._v(" 最后在需要的页面引入使用即可")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v(' import mqtt from "../utils/mqtt.js";\n')])])])])}),[],!1,null,null,null);e.default=o.exports}}]);